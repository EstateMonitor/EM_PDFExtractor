import re

# Словарь регулярных выражений для каждой группы данных
patterns = {
    "contract_number": r"ДОГОВОР СУБПОДРЯДА\s*№\s*([^\n]+)",  # Исправлено для полного захвата номера договора
    "project_description": r"на \s*([\s\S]+?)\s*код стройки",  # Описание проекта с захватом до ключа "код стройки"
    "construction_code": r"код стройки\s*([^\s\n]+)",  # Код стройки (может быть захвачен без лишних пробелов)
    "nomenclature_code": r"\(код\s+(?:номенклатурной группы проекта|проектный код)\s*([^\s\n\)]+)\)",
    # Номенклатурный код
    "contractor_name": r"между\s*([А-ЯЁа-яё«»\s]+?)\s*и",  # Название подрядчика
    "customer_name": r"\s*и\s*([А-ЯЁа-яё«»\s]+)\s*\Z"  # Название заказчика
}


def extract_data_sequentially(text, patterns):
    """
    Извлекает данные из текста, применяя регулярные выражения поочередно из словаря.
    :param text: Исходный текст.
    :param patterns: Словарь регулярных выражений (ключ — название поля, значение — регулярное выражение).
    :return: Словарь с извлечёнными данными и оставшийся текст.
    """
    extracted_data = {}

    # Применяем каждую регулярку последовательно
    for key, pattern in patterns.items():
        match = re.search(pattern, text)
        if match:
            # Сохраняем совпавшую группу в словарь
            extracted_data[key] = match.group(1).strip()
        else:
            print(f"Не найдено совпадение для {key}")

    return extracted_data


# Пример текста для тестирования
text = """
ДОГОВОР СУБПОДРЯДА № ГСП-19112-24 

на выполнение строительно-монтажных работ по Объектам, входящим в составе 
стройки «Реконструкция ГРС «Семикаракорск» Ростовской области 
код стройки 051-2003297 
(код номенклатурной группы проекта 0497-08.051-2003297) 
между 
АО «Газстройпром»  
и 
ООО «ПГС»
"""

# Применяем последовательное извлечение данных
extracted_data = extract_data_sequentially(text, patterns)

# Вывод результатов
print("Извлеченные данные:")
for key, value in extracted_data.items():
    print(f"{key}: {value}")